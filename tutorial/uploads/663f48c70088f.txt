#include "defs.h"

#define FMSG   0
#define WAIT   1
#define RING   2
#define OPEN   3
#define CODE1  4
#define CODE2  5
#define CODE3  6
#define ERR    7
salutare sefule

int main(){
   char code_ante = NOKEY;
   char code_now  = NOKEY;

   unsigned char kbhit = 0;
   char kbcode;

   unsigned char loop_cnt=0;

  
   char cod[]="123"; //sau int cod = 123;
   
   char buf[4];
   char state = FMSG;
   
   initLCD();
   PORTA = 0;
   
   while(1){
      if(loop_cnt==DELAY){ //citeste tastatura din 50 in 50 ms
         loop_cnt=0;

         code_ante = code_now;
         code_now  = kbscan();
         if( code_ante == NOKEY && code_now != NOKEY){
            kbhit=1;
            kbcode=code_now;
         }
      }
      
      //SFSM
      switch (state){
         case FMSG:
            clrLCD();
            putsLCD("Suna la 1..8");
            gotoLC(2,1);
            putsLCD("C pentru cod:");
            state = WAIT;
            break;
         
         case WAIT:
            if(kbhit){
               kbhit=0;
               if ('C'==kbcode){
                  clrLCD();
                  putsLCD("Cod=");
                  state = CODE1;
               }
               if (kbcode>='1' && kbcode <= '8'){
                  clrLCD();
                  putsLCD("Sun la ");
                  putchLCD(kbcode);
                  state = RING;
               }
            }
            break;
         
         case RING:
         _delay_ms(5000); 
         state = FMSG;
            break;
         
         case CODE1:
            if(kbhit){
               kbhit=0;
               if (kbcode>='0' && kbcode <= '9'){
                  buf[0]=kbcode;
                  putchLCD('*');
                  state = CODE2;
               }
               else{
                  state = FMSG;
               }
            }
            break;
         
         case CODE2:
            if(kbhit){
               kbhit=0;
               if (kbcode>='0' && kbcode <= '9'){
                  buf[1]=kbcode;
                  putchLCD('*');
                  state = CODE3;
               }
               else{
                  state = FMSG;
               }
            }
            break;
         
        case CODE3:
            if(kbhit){
               kbhit=0;
               if (kbcode>='0' && kbcode <= '9'){
                  clrLCD()
                  if(buf[0] == cod[0] && buf[1] == cod[1] && kbcode == cod[2]){
             putsLCD("Deschis!");
             state = OPEN;
          }
          else{
             putsLCD("Cod invalid");
             state = ERR;
          }
               }
               else{
                  state = ERR;
               }
            }

            break;
                     
         case OPEN:
            _delay_ms(5000);
         state = FMSG;
            break;
         
         case ERR:
            _delay_ms(5000);
            state = FMSG;
            break;
         
      }//end switch
      loop_cnt++;
   } //end while(1)   
}//end main